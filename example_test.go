package net_defragmenter

import (
	"github.com/google/gopacket"
	"github.com/google/gopacket/layers"
	"github.com/whaoinfo/net-defragmenter/internal/axpcap"
	"log"
	"testing"
	"time"
)

var (
	pktFg1 = []byte{30, 89, 165, 240, 141, 253, 68, 0, 77, 72, 73, 141, 134, 221, 104, 10, 34, 29, 5, 176, 44, 63, 0, 36, 0, 34, 0, 38, 0, 0, 0, 0, 0, 0, 0, 0, 16, 1, 0, 35, 0, 33, 0, 38, 0, 0, 0, 0, 0, 0, 0, 0, 0, 136, 17, 0, 0, 1, 22, 231, 255, 90, 34, 101, 34, 101, 8, 169, 183, 217, 33, 50, 8, 157, 0, 0, 0, 0, 0, 0, 0, 0, 3, 142, 180, 0, 0, 60, 0, 17, 1, 0, 35, 0, 33, 0, 38, 0, 0, 0, 0, 0, 0, 0, 0, 0, 16, 0, 57, 0, 25, 1, 0, 0, 0, 0, 0, 0, 195, 244, 0, 35, 0, 33, 0, 38, 0, 0, 0, 0, 0, 0, 0, 0, 0, 16, 0, 1, 0, 133, 0, 56, 0, 2, 64, 1, 0, 29, 0, 4, 0, 0, 4, 46, 0, 2, 0, 69, 0, 20, 0, 1, 0, 0, 21, 0, 2, 14, 1, 0, 22, 0, 10, 87, 83, 78, 45, 83, 71, 105, 45, 78, 54, 0, 93, 0, 21, 3, 178, 11, 48, 244, 32, 2, 0, 0, 0, 17, 48, 243, 0, 0, 0, 0, 0, 0, 0, 0, 0, 24, 0, 10, 97, 112, 112, 108, 101, 45, 112, 117, 115, 104, 0, 124, 0, 1, 8, 0, 95, 0, 2, 1, 1, 0, 108, 0, 4, 64, 0, 0, 1, 0, 81, 0, 4, 64, 0, 0, 1, 0, 81, 0, 4, 64, 0, 0, 25, 0, 109, 0, 4, 64, 0, 0, 1, 0, 109, 0, 4, 127, 255, 255, 255, 0, 1, 0, 116, 0, 56, 0, 2, 64, 2, 0, 29, 0, 4, 0, 0, 4, 47, 0, 2, 0, 58, 0, 20, 0, 1, 1, 0, 22, 0, 10, 87, 83, 78, 45, 83, 71, 105, 45, 78, 54, 0, 93, 0, 21, 7, 178, 11, 48, 244, 32, 2, 0, 0, 0, 17, 48, 243, 0, 0, 0, 0, 0, 0, 0, 0, 0, 24, 0, 10, 97, 112, 112, 108, 101, 45, 112, 117, 115, 104, 0, 108, 0, 4, 64, 0, 0, 2, 0, 81, 0, 4, 64, 0, 0, 1, 0, 81, 0, 4, 64, 0, 0, 25, 0, 109, 0, 4, 64, 0, 0, 2, 0, 109, 0, 4, 127, 255, 255, 254, 0, 1, 0, 161, 0, 56, 0, 2, 64, 3, 0, 29, 0, 4, 0, 0, 81, 38, 0, 2, 0, 97, 0, 20, 0, 1, 0, 0, 21, 0, 2, 14, 1, 0, 22, 0, 10, 87, 83, 78, 45, 83, 71, 105, 45, 78, 54, 0, 93, 0, 21, 3, 178, 11, 48, 244, 32, 2, 0, 0, 0, 17, 48, 243, 0, 0, 0, 0, 0, 0, 0, 0, 0, 23, 0, 38, 1, 0, 0, 34, 112, 101, 114, 109, 105, 116, 32, 111, 117, 116, 32, 105, 112, 32, 102, 114, 111, 109, 32, 97, 110, 121, 32, 116, 111, 32, 97, 115, 115, 105, 103, 110, 101, 100, 0, 124, 0, 1, 8, 0, 95, 0, 2, 1, 1, 0, 108, 0, 4, 64, 0, 0, 3, 0, 81, 0, 4, 64, 0, 0, 1, 0, 81, 0, 4, 64, 0, 0, 9, 0, 109, 0, 4, 64, 0, 0, 3, 0, 109, 0, 4, 127, 255, 255, 255, 0, 1, 0, 144, 0, 56, 0, 2, 64, 4, 0, 29, 0, 4, 0, 0, 81, 39, 0, 2, 0, 86, 0, 20, 0, 1, 1, 0, 22, 0, 10, 87, 83, 78, 45, 83, 71, 105, 45, 78, 54, 0, 93, 0, 21, 7, 178, 11, 48, 244, 32, 2, 0, 0, 0, 17, 48, 243, 0, 0, 0, 0, 0, 0, 0, 0, 0, 23, 0, 38, 1, 0, 0, 34, 112, 101, 114, 109, 105, 116, 32, 111, 117, 116, 32, 105, 112, 32, 102, 114, 111, 109, 32, 97, 110, 121, 32, 116, 111, 32, 97, 115, 115, 105, 103, 110, 101, 100, 0, 108, 0, 4, 64, 0, 0, 4, 0, 81, 0, 4, 64, 0, 0, 1, 0, 81, 0, 4, 64, 0, 0, 9, 0, 109, 0, 4, 64, 0, 0, 4, 0, 109, 0, 4, 127, 255, 255, 254, 0, 1, 0, 146, 0, 56, 0, 2, 64, 5, 0, 29, 0, 4, 0, 0, 3, 104, 0, 2, 0, 82, 0, 20, 0, 1, 0, 0, 21, 0, 2, 14, 1, 0, 22, 0, 10, 87, 83, 78, 45, 83, 71, 105, 45, 78, 54, 0, 93, 0, 21, 3, 178, 11, 48, 244, 32, 2, 0, 0, 0, 17, 48, 243, 0, 0, 0, 0, 0, 0, 0, 0, 0, 24, 0, 23, 109, 109, 115, 99, 45, 115, 101, 114, 118, 101, 114, 45, 100, 111, 109, 97, 105, 110, 45, 100, 114, 111, 112, 0, 124, 0, 1, 8, 0, 95, 0, 2, 1, 1, 0, 108, 0, 4, 64, 0, 0, 5, 0, 81, 0, 4, 64, 0, 0, 1, 0, 81, 0, 4, 64, 0, 0, 17, 0, 109, 0, 4, 64, 0, 0, 5, 0, 109, 0, 4, 127, 255, 255, 255, 0, 1, 0, 129, 0, 56, 0, 2, 64, 6, 0, 29, 0, 4, 0, 0, 3, 105, 0, 2, 0, 71, 0, 20, 0, 1, 1, 0, 22, 0, 10, 87, 83, 78, 45, 83, 71, 105, 45, 78, 54, 0, 93, 0, 21, 7, 178, 11, 48, 244, 32, 2, 0, 0, 0, 17, 48, 243, 0, 0, 0, 0, 0, 0, 0, 0, 0, 24, 0, 23, 109, 109, 115, 99, 45, 115, 101, 114, 118, 101, 114, 45, 100, 111, 109, 97, 105, 110, 45, 100, 114, 111, 112, 0, 108, 0, 4, 64, 0, 0, 6, 0, 81, 0, 4, 64, 0, 0, 1, 0, 81, 0, 4, 64, 0, 0, 17, 0, 109, 0, 4, 64, 0, 0, 6, 0, 109, 0, 4, 127, 255, 255, 254, 0, 1, 0, 134, 0, 56, 0, 2, 64, 7, 0, 29, 0, 4, 0, 0, 81, 34, 0, 2, 0, 70, 0, 20, 0, 1, 0, 0, 21, 0, 2, 14, 1, 0, 22, 0, 10, 87, 83, 78, 45, 83, 71, 105, 45, 78, 54, 0, 93, 0, 21, 3, 178, 11, 48, 244, 32, 2, 0, 0, 0, 17, 48, 243, 0, 0, 0, 0, 0, 0, 0, 0, 0, 24, 0, 11, 113, 117, 111, 116, 97, 45, 114, 101, 116, 45, 49, 0, 124, 0, 1, 8, 0, 95, 0, 2, 1, 1, 0, 108, 0, 4, 64, 0, 0, 7, 0, 81, 0, 4, 64, 0, 0, 1, 0, 81, 0, 4, 64, 0, 0, 25, 0, 109, 0, 4, 64, 0, 0, 7, 0, 109, 0, 4, 127, 255, 255, 255, 0, 1, 0, 117, 0, 56, 0, 2, 64, 8, 0, 29, 0, 4, 0, 0, 81, 35, 0, 2, 0, 59, 0, 20, 0, 1, 1, 0, 22, 0, 10, 87, 83, 78, 45, 83, 71, 105, 45, 78, 54, 0, 93, 0, 21, 7, 178, 11, 48, 244, 32, 2, 0, 0, 0, 17, 48, 243, 0, 0, 0, 0, 0, 0, 0, 0, 0, 24, 0, 11, 113, 117, 111, 116, 97, 45, 114, 101, 116, 45, 49, 0, 108, 0, 4, 64, 0, 0, 8, 0, 81, 0, 4, 64, 0, 0, 1, 0, 81, 0, 4, 64, 0, 0, 25, 0, 109, 0, 4, 64, 0, 0, 8, 0, 109, 0, 4, 127, 255, 255, 254, 0, 3, 0, 44, 0, 108, 0, 4, 64, 0, 0, 1, 0, 44, 0, 2, 2, 0, 0, 4, 0, 26, 0, 42, 0, 1, 1, 0, 41, 0, 17, 16, 99, 103, 110, 97, 116, 95, 112, 111, 108, 105, 99, 121, 50, 95, 117, 108, 0, 3, 0, 30, 0, 108, 0, 4, 64, 0, 0, 2, 0, 44, 0, 2, 2, 0, 0, 4, 0, 12, 0, 42, 0, 1, 0, 0, 22, 0, 3, 82, 65, 78, 0, 3, 0, 44, 0, 108, 0, 4, 64, 0, 0, 3, 0, 44, 0, 2, 2, 0, 0, 4, 0, 26, 0, 42, 0, 1, 1, 0, 41, 0, 17, 16, 99, 103, 110, 97, 116, 95, 112, 111, 108, 105, 99, 121, 50, 95, 117, 108, 0, 3, 0, 30, 0, 108, 0, 4, 64, 0, 0, 4, 0, 44, 0, 2, 2, 0, 0, 4, 0, 12, 0, 42, 0, 1, 0, 0, 22, 0, 3, 82, 65, 78, 0, 3, 0, 44, 0, 108, 0, 4, 64, 0, 0, 5, 0, 44, 0, 2, 2, 0, 0, 4, 0, 26, 0, 42, 0, 1, 1, 0, 41, 0, 17, 16, 99, 103, 110, 97, 116, 95, 112, 111, 108, 105, 99, 121, 50, 95, 117, 108, 0, 3, 0, 30, 0, 108, 0, 4, 64, 0, 0, 6, 0, 44, 0, 2, 2, 0, 0, 4, 0, 12, 0, 42, 0, 1, 0, 0, 22, 0, 3, 82, 65, 78, 0, 3, 0, 44, 0, 108, 0, 4, 64, 0, 0, 7, 0, 44, 0, 2}
	pktFg2 = []byte{30, 89, 165, 240, 141, 253, 68, 0, 77, 72, 73, 141, 134, 221, 104, 10, 34, 29, 3, 9, 44, 63, 0, 36, 0, 34, 0, 38, 0, 0, 0, 0, 0, 0, 0, 0, 16, 1, 0, 35, 0, 33, 0, 38, 0, 0, 0, 0, 0, 0, 0, 0, 0, 136, 17, 0, 5, 168, 22, 231, 255, 90, 2, 0, 0, 4, 0, 26, 0, 42, 0, 1, 1, 0, 41, 0, 17, 16, 99, 103, 110, 97, 116, 95, 112, 111, 108, 105, 99, 121, 50, 95, 117, 108, 0, 3, 0, 30, 0, 108, 0, 4, 64, 0, 0, 8, 0, 44, 0, 2, 2, 0, 0, 4, 0, 12, 0, 42, 0, 1, 0, 0, 22, 0, 3, 82, 65, 78, 0, 6, 0, 33, 0, 81, 0, 4, 64, 0, 0, 1, 0, 62, 0, 1, 2, 0, 37, 0, 3, 2, 0, 0, 0, 31, 0, 9, 1, 0, 0, 0, 0, 1, 170, 166, 199, 0, 6, 0, 28, 0, 81, 0, 4, 64, 0, 0, 9, 0, 62, 0, 1, 2, 0, 37, 0, 3, 128, 0, 0, 0, 82, 0, 4, 64, 0, 0, 1, 0, 6, 0, 28, 0, 81, 0, 4, 64, 0, 0, 17, 0, 62, 0, 1, 2, 0, 37, 0, 3, 128, 0, 0, 0, 82, 0, 4, 64, 0, 0, 1, 0, 6, 0, 49, 0, 81, 0, 4, 64, 0, 0, 25, 0, 62, 0, 1, 3, 0, 37, 0, 3, 134, 0, 0, 0, 31, 0, 9, 1, 0, 0, 0, 0, 1, 170, 166, 199, 0, 32, 0, 4, 0, 0, 1, 44, 0, 82, 0, 4, 64, 0, 0, 1, 0, 7, 0, 27, 0, 109, 0, 4, 127, 255, 255, 255, 0, 25, 0, 1, 1, 0, 26, 0, 10, 0, 0, 76, 75, 64, 0, 0, 0, 0, 0, 0, 7, 0, 27, 0, 109, 0, 4, 127, 255, 255, 254, 0, 25, 0, 1, 4, 0, 26, 0, 10, 0, 0, 0, 0, 0, 0, 0, 76, 75, 64, 0, 7, 0, 32, 0, 109, 0, 4, 64, 0, 0, 1, 0, 25, 0, 1, 1, 0, 26, 0, 10, 0, 0, 0, 19, 136, 0, 0, 0, 0, 0, 0, 124, 0, 1, 8, 0, 7, 0, 32, 0, 109, 0, 4, 64, 0, 0, 2, 0, 25, 0, 1, 4, 0, 26, 0, 10, 0, 0, 0, 0, 0, 0, 0, 0, 19, 136, 0, 124, 0, 1, 8, 0, 7, 0, 32, 0, 109, 0, 4, 64, 0, 0, 3, 0, 25, 0, 1, 1, 0, 26, 0, 10, 0, 0, 0, 19, 136, 0, 0, 0, 0, 0, 0, 124, 0, 1, 8, 0, 7, 0, 32, 0, 109, 0, 4, 64, 0, 0, 4, 0, 25, 0, 1, 4, 0, 26, 0, 10, 0, 0, 0, 0, 0, 0, 0, 0, 19, 136, 0, 124, 0, 1, 8, 0, 7, 0, 32, 0, 109, 0, 4, 64, 0, 0, 5, 0, 25, 0, 1, 5, 0, 26, 0, 10, 0, 0, 0, 19, 136, 0, 0, 0, 0, 0, 0, 124, 0, 1, 8, 0, 7, 0, 32, 0, 109, 0, 4, 64, 0, 0, 6, 0, 25, 0, 1, 5, 0, 26, 0, 10, 0, 0, 0, 0, 0, 0, 0, 0, 19, 136, 0, 124, 0, 1, 8, 0, 7, 0, 32, 0, 109, 0, 4, 64, 0, 0, 7, 0, 25, 0, 1, 1, 0, 26, 0, 10, 0, 0, 0, 19, 136, 0, 0, 0, 0, 0, 0, 124, 0, 1, 8, 0, 7, 0, 32, 0, 109, 0, 4, 64, 0, 0, 8, 0, 25, 0, 1, 4, 0, 26, 0, 10, 0, 0, 0, 0, 0, 0, 0, 0, 19, 136, 0, 124, 0, 1, 8, 0, 117, 0, 4, 0, 0, 28, 32, 0, 141, 0, 26, 7, 8, 19, 65, 8, 0, 0, 0, 0, 241, 8, 1, 19, 16, 4, 0, 16, 2, 240, 6, 113, 105, 66, 8, 65, 241, 0, 113, 0, 1, 3, 128, 9, 0, 3, 81, 122, 5, 0, 159, 0, 31, 11, 118, 122, 119, 105, 110, 116, 101, 114, 110, 101, 116, 6, 109, 110, 99, 52, 56, 48, 6, 109, 99, 99, 51, 49, 49, 4, 103, 112, 114, 115, 1, 1, 0, 4, 1, 0, 0, 7, 128, 11, 0, 102, 81, 122, 1, 31, 11, 118, 122, 119, 105, 110, 116, 101, 114, 110, 101, 116, 6, 109, 110, 99, 52, 56, 48, 6, 109, 99, 99, 51, 49, 49, 4, 103, 112, 114, 115, 2, 36, 50, 55, 99, 49, 57, 56, 100, 56, 45, 98, 97, 49, 97, 45, 52, 52, 56, 57, 45, 56, 53, 99, 100, 45, 101, 98, 56, 48, 56, 56, 50, 48, 50, 101, 102, 56, 3, 5, 2, 178, 22, 11, 91, 4, 1, 10, 5, 6, 8, 19, 1, 132, 0, 0, 7, 3, 19, 1, 132, 8, 4, 40, 73, 4, 0}
)

func TestDebugPacketsInfo(t *testing.T) {
	pkt1 := gopacket.NewPacket(pktFg1, layers.LinkTypeEthernet, gopacket.Default)
	if pkt1.ErrorLayer() != nil {
		log.Println(pkt1.ErrorLayer().Error())
		return
	}

	pkt2 := gopacket.NewPacket(pktFg2, layers.LinkTypeEthernet, gopacket.Default)
	if pkt2.ErrorLayer() != nil {
		log.Println(pkt2.ErrorLayer().Error())
		return
	}

	log.Println("ok")
}

func TestFilterAndPushPacket(t *testing.T) {

	//cfg := NewOption(func(cfg *Config) {
	//	cfg.Interval = time.Second * 2
	//	cfg.FragmentType = definition.Layer3FragmentType
	//})

	opt := NewOption(func(opt *Option) {
		//opt.ClsWorkerNum
		opt.ClassifierOption.MaxClassifiersNum = 1

		opt.CollectorOption.MaxCollectorsNum = 1
		opt.CollectorOption.MaxChannelCap = 1
		opt.CollectorOption.TickerInterval = 100
	})

	mgr, _ := NewManager(opt)
	mgr.Start()
	mgr.FilterAndPushPacket(pktFg1)
	time.Sleep(time.Second * 1)
	mgr.FilterAndPushPacket(pktFg2)

	time.Sleep(time.Second * 60)
}

func TestProcess(t *testing.T) {

	axpcap.TestPcapFileRead("E:\\pcaps/ipv6frag.pcap")
}
